volumes:
  db-data:
services:
  db:
    image: docker.io/library/postgres:16-bookworm
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d:ro
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-myuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mypassword}
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  proxy:
    image: docker.io/library/nginx:1.23
    ports:
      - "5000:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # depends_on:
    #   - api-rest
    #   - api-graphql
    #   - api-swagger
  api-rest:
    image: docker.io/postgrest/postgrest:latest
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      PGRST_DB_URI: "postgres://${POSTGRES_USER:-myuser}:${POSTGRES_PASSWORD:-mypassword}@db/${POSTGRES_DB:-mydb}"
      # The name of which database schema to expose to REST clients
      PGRST_DB_SCHEMA: public
      # The database role to use when no client authentication is provided
      PGRST_DB_ANON_ROLE: anon
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      PGRST_OPENAPI_SERVER_PROXY_URI: ${BASE_URL:-http://localhost:5000}/api/rest/
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000
  # api-graphql:
  #   image: docker.io/graphile/postgraphile:latest
  #   environment:
  #     DATABASE_URL: "postgres://${POSTGRES_USER:-myuser}:${POSTGRES_PASSWORD:-mypassword}@db/${POSTGRES_DB:-mydb}"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   command: --enhance-graphiql
  api-swagger:
    image: docker.io/swaggerapi/swagger-ui:latest
    environment:
      API_URL: http://localhost:3000/api/rest/
      BASE_URL: /api/swagger
    restart: always
    ports:
      - 8080:8080
  # api-redoc:
  #   image: docker.io/redocly/redoc
  #   environment:
  #     SPEC_URL: ${BASE_URL:-http://localhost:5000}/api/rest
  #     PAGE_TITLE: "API Documentation"
  #     # PAGE_FAVICON:
  # admin:
  #   image: docker.io/library/adminer:latest
  #   ports:
  #     - "5431:8080"       # pg admin
  #   environment:
  #     ADMINER_DEFAULT_SERVER: db
